@model IEnumerable<AppUser>

@{
    Layout = "~/Views/Shared/_LayoutDash.cshtml";
}
@{
    int countshop = 0, countuser = 0;

}
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4" asp-action="index" asp-controller="admin">
        <h1 class="h3 mb-0 text-gray-800 font-weight-bold">Dashboard</h1>
    </div>


    <!-- Content Row -->
    <div class="row">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Number Of Account
                            </div>
                            @{
                                int count = userManager.Users.Count();
                                var user = await userManager.GetUserAsync(User);
                                var categorycount = CategoryRepo.GetAll().Count();

                                foreach (var users in Model)
                                    {
                                    @if (await userManager.IsInRoleAsync(users, "Shop"))
                                    {
                                        countshop++;
                                    }
                                    else if (await userManager.IsInRoleAsync(users, "user"))
                                    {
                                        countuser++;
                                    }
                                }

                            }


                            <div class="h5 mb-0 font-weight-bold text-gray-800">@count</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Number Of Agent
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@countshop</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-store fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Number Of User
                            </div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@countuser</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Requests Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Categories
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@categorycount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-list fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="container-fluid overflow-auto">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800 font-weight-bold">Users</h1>
    </div>
    <table class="table align-middle mb-0 bg-white">
        <thead class="bg-primary" style="color:white;">
            <tr>
                <th>Name</th>
                <th>TypeOfUser</th>
                <th>Status</th>
                <th>VipShop</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody class="admintableIndex">
            @{
                var usera = await userManager.GetUserAsync(User);

                @foreach (var users in Model)
                {
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                @*<img src=@users.image*@
                                @*alt=""
                                    style="width: 45px; height: 45px; margin-right: 10px"
                                    class="rounded-circle" />*@
                                <div class="ms-3">
                                    <p class="fw-bold mb-1">@users.UserName</p>
                                    <p class="text-muted mb-0">@users.Email</p>
                                </div>
                            </div>
                        </td>
                        <td>
                            @{
                                string userType = "Unknown";
                                @if (await userManager.IsInRoleAsync(users, "Shop"))
                                {
                                    userType = "Shop";
                                }
                                @if (await userManager.IsInRoleAsync(users, "user"))
                                {
                                    userType = "User";
                                }
                                else if (await userManager.IsInRoleAsync(users, "Admin"))

                                {
                                    userType = "Admin";
                                }
                            }

                            <span >@userType</span>


                        </td>
                        <td>
                            <span class="badge badge-success rounded-pill d-inline">Active</span>
                        </td>
                        <td>
                            @if (await userManager.IsInRoleAsync(users, "Shop"))
                                {
                                var ShopUser = @ShopRepo.GetByFk(users.Id);
                                if (ShopUser.RequestStatus == RequestStatus.Approved)
                                {
                                    <span>Yes</span>
                                    }
                                else
                                    {
                                    <span>No</span>
                                    }
                                }
                            </td>
                        <td>
                            @if (!await userManager.IsInRoleAsync(users, "Admin"))
                                {
                                <button class="btn btn-primary dropdown-toggle"
                                        type="button"
                                        data-bs-toggle="dropdown"
                                        data-bs-auto-close="true"
                                        aria-expanded="false">
                                    Edit
                                </button>
                                <ul class="dropdown-menu">
                                    @if (await userManager.IsInRoleAsync(users, "user"))
                                        {
                                        <li><a class="dropdown-item" asp-action="usersInfo" asp-controller="Admin" asp-route-UserId="@users.Id">View Cart</a></li>
                                        <li><a class="dropdown-item text-danger" asp-action="reomveUser" asp-controller="Admin" asp-route-UserId="@users.Id"> Remove Account</a></li>
                                        }
                                    @if (await userManager.IsInRoleAsync(users, "Shop"))
                                        {
                                        var ShopUser = @ShopRepo.GetByFk(users.Id);
                                        if (ShopUser.RequestStatus == RequestStatus.Pending)
                                            {
                                            <li class="d-flex gap-1">

                                                <a class="btn-sm btn-danger" asp-action="Rejected" asp-controller="Admin" asp-route-UserId="@users.Id" role="button">Rejected</a>
                                                <a class="btn-sm btn-success" asp-action="Approved" asp-controller="Admin" asp-route-UserId="@users.Id" role="button">Approved</a>

                                            </li>
                                            }
                                        else
                                        if (ShopUser.RequestStatus == RequestStatus.Approved)
                                            {
                                            <a class="btn-sm btn-danger" asp-action="Rejected" asp-controller="Admin" asp-route-UserId="@users.Id" role="button">Rejected</a>
                                            }
                                        else

                                            {
                                            <li><a class="dropdown-item" asp-action="Approved" asp-controller="Admin" asp-route-UserId="@users.Id">Set to <span class="text-success">VIP</span> Shop</a></li>
                                            }



                                        <li><a class="dropdown-item" asp-action="ViewProduct" asp-controller="Admin" asp-route-ShopId="@users.Id">View Products</a></li>
                                        <li><a class="dropdown-item text-danger" asp-action="reomveUser" asp-controller="Admin" asp-route-UserId="@users.Id"> Remove Account</a></li>
                                        }

                                </ul>
                                }
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
    <div class="mt-3 d-flex justify-content-end align-items-center">
    </div>
</div>